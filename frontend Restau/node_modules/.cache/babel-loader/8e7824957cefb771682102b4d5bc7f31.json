{"ast":null,"code":"import _slicedToArray from \"D:\\\\Logicom\\\\gestion bon de commande\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Logicom\\\\gestion bon de commande\\\\frontend\\\\src\\\\Components\\\\NavBar\\\\NavBarComponent.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Navbar, Container, Nav, NavDropdown, Button } from 'react-bootstrap';\nimport SocieteServices from '../../Services/SocieteServices';\nimport \"./../../Styles/NavBarStyles.css\";\nexport default function NavBarComponent({\n  codeSociete\n}) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        societe = _useState2[0],\n        setSociete = _useState2[1];\n\n  useEffect(() => {\n    if (codeSociete !== \"Societe\" && codeSociete !== \"\") SocieteServices.getSocieteByCode(codeSociete).then(soc => {\n      setSociete(soc[0]);\n      console.log(societe);\n    });else setSociete(\"\");\n  }, [codeSociete]);\n  return React.createElement(Navbar, {\n    bg: \"primary\",\n    variant: \"dark\",\n    sticky: \"top\",\n    style: {\n      marginBottom: \"20px\"\n    },\n    expand: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    href: \"/Categories/\".concat(codeSociete, \"/0\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, societe ? societe.rsoc : \"\"), React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"basic-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    style: {\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    href: \"/\",\n    style: {\n      color: \"white\",\n      border: \"lightgrey solid 0.5px\",\n      borderRadius: \"3px\",\n      marginRight: \"10px\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Home\"), codeSociete && codeSociete !== \"Societe\" && React.createElement(NavDropdown, {\n    style: {\n      a: {\n        color: \"white\"\n      },\n      border: \"lightgrey solid 0.5px\",\n      borderRadius: \"3px\",\n      marginRight: \"10px\",\n      textAlign: \"center\"\n    },\n    title: \"Passer Commande\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(NavDropdown.Item, {\n    href: \"/Commande/\".concat(societe.code, \"?employe=true\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Employer\"), React.createElement(NavDropdown.Item, {\n    href: \"/Commande/\".concat(societe.code, \"?client=true\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Client\")), codeSociete && codeSociete !== \"Societe\" && React.createElement(Nav.Link, {\n    style: {\n      color: \"white\",\n      border: \"lightgrey solid 0.5px\",\n      borderRadius: \"3px\",\n      marginRight: \"10px\",\n      textAlign: \"center\"\n    },\n    href: \"/VerifierCommande/\".concat(codeSociete),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Verifier Commandes\"), localStorage.getItem(\"employe\") !== null && React.createElement(Button, {\n    style: {\n      color: \"white\",\n      border: \"lightgrey solid 0.5px\",\n      borderRadius: \"3px\",\n      marginRight: \"10px\",\n      textAlign: \"center\"\n    },\n    onClick: () => {\n      localStorage.removeItem(\"employe\");\n      window.location.reload();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"D\\xE9connecter\"))))) // <Navbar bg=\"dark\" sticky=\"top\" style={{ marginBottom: \"20px\" }}>\n  //     <Container>\n  //         {societe ? <Navbar.Brand >{societe.rsoc}</Navbar.Brand> : \"\"}\n  //         <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  //         <Navbar.Collapse id=\"basic-navbar-nav\">\n  //             <Nav className=\"mr-auto\">\n  //                 <Nav.Link href={`/`}>Home</Nav.Link>\n  //                 {codeSociete && codeSociete !== \"Societe\" && <Nav.Link href={`/Commande/${codeSociete}`}>Passer Commande</Nav.Link>}\n  //             </Nav>\n  //         </Navbar.Collapse>\n  //         {/* <Nav className=\"mr-auto text-truncate\"> */}\n  //         {/* {societe ? <Nav.Link className=\"mr-auto\" href={`/Categories/${codeSociete}/0`}><h4>{societe.rsoc}</h4></Nav.Link> : \"\"} */}\n  //         {/* </Nav> */}\n  //     </Container>\n  // </Navbar>\n  ;\n}","map":{"version":3,"sources":["D:\\Logicom\\gestion bon de commande\\frontend\\src\\Components\\NavBar\\NavBarComponent.js"],"names":["React","useEffect","useState","Navbar","Container","Nav","NavDropdown","Button","SocieteServices","NavBarComponent","codeSociete","societe","setSociete","getSocieteByCode","then","soc","console","log","marginBottom","rsoc","justifyContent","color","border","borderRadius","marginRight","textAlign","a","code","localStorage","getItem","removeItem","window","location","reload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Navbar, Container, Nav, NavDropdown, Button } from 'react-bootstrap'\r\nimport SocieteServices from '../../Services/SocieteServices'\r\nimport \"./../../Styles/NavBarStyles.css\"\r\nexport default function NavBarComponent({ codeSociete }) {\r\n    const [societe, setSociete] = useState()\r\n    useEffect(() => {\r\n\r\n        if (codeSociete !== \"Societe\" && codeSociete !== \"\")\r\n            SocieteServices.getSocieteByCode(codeSociete).then((soc) => {\r\n                setSociete(soc[0]);\r\n                console.log(societe)\r\n            })\r\n        else\r\n            setSociete(\"\");\r\n    }, [codeSociete])\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\" style={{ marginBottom: \"20px\" }} expand=\"lg\">\r\n\r\n            <Container>\r\n                {<Navbar.Brand href={`/Categories/${codeSociete}/0`}>{societe ? societe.rsoc : \"\"}</Navbar.Brand>}\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" style={{ justifyContent: \"flex-end\" }}>\r\n                    <Nav className=\"justify-content-end\" >\r\n                        <Nav.Link href={`/`} style={{ color: \"white\", border: \"lightgrey solid 0.5px\", borderRadius: \"3px\", marginRight: \"10px\", textAlign: \"center\" }}>Home</Nav.Link>\r\n                        {\r\n                            codeSociete && codeSociete !== \"Societe\" &&\r\n                            <NavDropdown style={{ a: { color: \"white\" }, border: \"lightgrey solid 0.5px\", borderRadius: \"3px\", marginRight: \"10px\", textAlign: \"center\" }} title=\"Passer Commande\" >\r\n                                <NavDropdown.Item href={`/Commande/${societe.code}?employe=true`}>Employer</NavDropdown.Item>\r\n                                <NavDropdown.Item href={`/Commande/${societe.code}?client=true`}>Client</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        }\r\n                        {codeSociete && codeSociete !== \"Societe\" && <Nav.Link style={{ color: \"white\", border: \"lightgrey solid 0.5px\", borderRadius: \"3px\", marginRight: \"10px\", textAlign: \"center\" }} href={`/VerifierCommande/${codeSociete}`}>Verifier Commandes</Nav.Link>}\r\n                        {\r\n                            (localStorage.getItem(\"employe\") !== null) &&\r\n                            <Button style={{ color: \"white\", border: \"lightgrey solid 0.5px\", borderRadius: \"3px\", marginRight: \"10px\", textAlign: \"center\" }}\r\n                                onClick={() => { localStorage.removeItem(\"employe\"); window.location.reload(); }}>\r\n                                Déconnecter\r\n                            </Button>\r\n                        }\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n\r\n        </Navbar>\r\n        // <Navbar bg=\"dark\" sticky=\"top\" style={{ marginBottom: \"20px\" }}>\r\n        //     <Container>\r\n        //         {societe ? <Navbar.Brand >{societe.rsoc}</Navbar.Brand> : \"\"}\r\n        //         <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        //         <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        //             <Nav className=\"mr-auto\">\r\n        //                 <Nav.Link href={`/`}>Home</Nav.Link>\r\n\r\n        //                 {codeSociete && codeSociete !== \"Societe\" && <Nav.Link href={`/Commande/${codeSociete}`}>Passer Commande</Nav.Link>}\r\n        //             </Nav>\r\n\r\n        //         </Navbar.Collapse>\r\n        //         {/* <Nav className=\"mr-auto text-truncate\"> */}\r\n        //         {/* {societe ? <Nav.Link className=\"mr-auto\" href={`/Categories/${codeSociete}/0`}><h4>{societe.rsoc}</h4></Nav.Link> : \"\"} */}\r\n        //         {/* </Nav> */}\r\n\r\n        //     </Container>\r\n        // </Navbar>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}