{"ast":null,"code":"import _objectSpread from \"D:\\\\Sandra\\\\MERN\\\\projet restaurant\\\\front restau\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\Sandra\\\\MERN\\\\projet restaurant\\\\front restau\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Sandra\\\\MERN\\\\projet restaurant\\\\front restau\\\\frontend\\\\src\\\\Components\\\\Commande\\\\VerifierCommandeComponent.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Modal, Row } from 'react-bootstrap';\nimport { useParams } from 'react-router';\nimport VerifierCommandeServices from '../../Services/VerifierCommandeServices';\nimport ReactLoading from \"react-loading\";\nimport { FiArrowDown, FiArrowUp, FiInfo, FiRefreshCw } from \"react-icons/fi\";\nimport \"./../../Styles/CommandeComponentStyle.css\";\nimport \"./../../Styles/VerifierCommandeStyle.css\";\nimport LoginAdminComponent from '../Login/LoginAdminComponent';\nexport default function VerifierCommandeComponent({\n  parentCallback\n}) {\n  const _useParams = useParams(),\n        societeCode = _useParams.societeCode;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        commandes = _useState2[0],\n        setCommandes = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modal = _useState4[0],\n        showModal = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        CodeCmd = _useState6[0],\n        setCodeCmd = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cmdProducts = _useState8[0],\n        setCmdProducts = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        loadingProducts = _useState10[0],\n        setLoadingProducts = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        sortByDate = _useState12[0],\n        setSortByDate = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        employeAuthed = _useState14[0],\n        setEmployeAuthed = _useState14[1];\n\n  useEffect(() => {\n    parentCallback(societeCode);\n    setEmployeAuthed(verifierAdmin());\n    VerifierCommandeServices.getCommandesByCodeSociete(societeCode).then(res => {\n      setCommandes(res.sort((a, b) => a.DateCmd > b.DateCmd ? 1 : a.DateCmd < b.DateCmd ? -1 : 0));\n    });\n  }, [parentCallback, societeCode]);\n\n  function verifierAdmin() {\n    const employeString = localStorage.getItem(\"employe\");\n\n    if (employeString) {\n      const employe = JSON.parse(employeString);\n      const isAd = employe.Fonction === \"ADMINISTRATEUR\";\n      return isAd;\n    }\n\n    return false;\n  }\n\n  useEffect(() => {\n    if (CodeCmd) {\n      setCmdProducts([]);\n      setLoadingProducts(true);\n      VerifierCommandeServices.getProductByCodeCommande(CodeCmd).then(result => {\n        setCmdProducts(result);\n        setLoadingProducts(false);\n      });\n    }\n  }, [CodeCmd]);\n\n  function getData() {\n    setCommandes([]);\n    VerifierCommandeServices.getCommandesByCodeSociete(societeCode).then(res => {\n      if (sortByDate) {\n        setCommandes(res.sort((a, b) => a.DateCmd > b.DateCmd ? 1 : a.DateCmd < b.DateCmd ? -1 : 0));\n      } else {\n        setCommandes(res.sort((a, b) => a.DateCmd < b.DateCmd ? 1 : a.DateCmd > b.DateCmd ? -1 : 0));\n      }\n    });\n  }\n\n  function getDate(date1) {\n    let date = new Date(parseInt(date1));\n    let stringDate = \"\";\n    stringDate += date.getDate() < 10 ? \"0\".concat(date.getDate(), \"/\") : \"\".concat(date.getDate(), \"/\");\n    stringDate += date.getMonth() + 1 < 10 ? \"0\".concat(date.getMonth() + 1, \"/\") : \"\".concat(date.getMonth() + 1, \"/\");\n    stringDate += date.getFullYear();\n    stringDate += date.getHours() < 10 ? \" 0\".concat(date.getHours()) : \" \".concat(date.getHours());\n    stringDate += date.getMinutes() < 10 ? \":0\".concat(date.getMinutes()) : \":\".concat(date.getMinutes());\n    stringDate += \":00\";\n    return stringDate;\n  }\n\n  function refreshData() {\n    getData();\n  }\n\n  function sortcategs(sortByDate) {\n    if (sortByDate) {\n      setCommandes(commandes.sort((a, b) => a.DateCmd > b.DateCmd ? 1 : a.DateCmd < b.DateCmd ? -1 : 0));\n    } else {\n      setCommandes(commandes.sort((a, b) => a.DateCmd < b.DateCmd ? 1 : a.DateCmd > b.DateCmd ? -1 : 0));\n    }\n  }\n\n  async function validerCmd(CodeCmd) {\n    const cmd = commandes.find(cmd => {\n      return CodeCmd === cmd.CodeCmd;\n    });\n\n    if (cmd) {\n      const employeString = localStorage.getItem(\"employe\");\n      const admin = JSON.parse(employeString);\n      await VerifierCommandeServices.updateCommandeStatus(CodeCmd, _objectSpread({}, cmd, {\n        Status: 1\n      }), admin.CodeEmp);\n      setCommandes(commandes.map(cmd => {\n        if (cmd.CodeCmd === CodeCmd) {\n          return _objectSpread({}, cmd, {\n            Status: 1\n          });\n        }\n\n        return cmd;\n      }));\n    }\n  }\n\n  return React.createElement(React.Fragment, null, employeAuthed && React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      margin: \"auto\",\n      paddingRight: \"15px\",\n      paddingLeft: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    style: {\n      marginTop: \"5px\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Commandes\"), React.createElement(\"hr\", {\n    style: {\n      margin: \"0px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Card.Body, {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    style: {\n      marginBottom: \"0px\",\n      textAlign: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"light\",\n    className: \"m-1\",\n    onClick: () => {\n      setSortByDate(!sortByDate);\n      sortcategs(!sortByDate);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, sortByDate && React.createElement(FiArrowUp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), \" \", !sortByDate && React.createElement(FiArrowDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), \" Date\"), React.createElement(Button, {\n    variant: \"light\",\n    className: \"m-1\",\n    onClick: () => {\n      refreshData();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(FiRefreshCw, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), commandes.map((cmd, index) => React.createElement(Col, {\n    xs: 12,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Card, {\n    bg: \"light\",\n    text: \"dark\",\n    className: \"mb-2 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 6,\n    sm: 6,\n    md: 3,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"media-object mr-auto ml-auto\",\n    src: \"/Images/order.png\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 6,\n    md: 5,\n    lg: 6,\n    xl: 7,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Date : \", getDate(cmd.DateCmd)), cmd.Depuis !== \"CLIENT\" && React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Table : \", cmd.TableNumber), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Prix Total : \", cmd.PrixTotalCmd, \" DT\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Depuis : \", cmd.Depuis === \"CLIENT\" ? \"Client\" : \"Serveur (\".concat(cmd.CodeEmp, \")\")))), React.createElement(Col, {\n    xl: 2,\n    lg: 3,\n    md: 4,\n    sm: 5,\n    xs: 9,\n    style: {\n      textAlign: \"right\",\n      marginRight: \"auto\",\n      marginLeft: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      padding: \"5px\",\n      width: \"100%\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"info\",\n    size: \"sm\",\n    style: {\n      marginTop: \"5px\"\n    },\n    className: \"mb-3 w-100\",\n    onClick: e => {\n      setCodeCmd(cmd.CodeCmd);\n      showModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(FiInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), \" Voir plus\"), cmd.Status === 0 && React.createElement(Button, {\n    variant: \"success\",\n    size: \"sm\",\n    style: {\n      marginTop: \"5px\"\n    },\n    className: \"mb-3 w-100\",\n    onClick: () => {\n      validerCmd(cmd.CodeCmd);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Valider Commande\")))))))))))))), React.createElement(Modal, {\n    size: \"lg\",\n    show: modal,\n    onHide: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Commande\")), React.createElement(Modal.Body, {\n    style: {\n      height: \"calc(100vh - 200px)\",\n      overflowY: \"scroll\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, loadingProducts && React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      alignContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(ReactLoading, {\n    type: \"spokes\",\n    color: \"#000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), !loadingProducts && React.createElement(React.Fragment, null, cmdProducts.map((prod, index) => React.createElement(Card, {\n    bg: \"light\",\n    text: \"dark\",\n    className: \"mb-2 w-100\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    xl: 4,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"media-object\",\n    src: \"/Images/food1.png\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    lg: 8,\n    xl: 8,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, prod.LibProd), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Prix : \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, parseFloat(prod.Prix * (1 + prod.TauxTVA * 0.01)).toFixed(1), \" DT\")), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Quantite : \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, prod.Qte)), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Total : \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \" \", parseFloat(prod.Prix * (1 + prod.TauxTVA * 0.01) * prod.Qte).toFixed(1), \" DT\")), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Description : \", prod.DesProd)))))))))), React.createElement(Modal.Footer, {\n    style: {\n      justifyContent: \"space-between\",\n      flexWrap: \"nowrap\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, CodeCmd && commandes && React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Total : \", commandes.find(cmd => {\n    return CodeCmd === cmd.CodeCmd;\n  }) ? commandes.find(cmd => {\n    return CodeCmd === cmd.CodeCmd;\n  }).PrixTotalCmd : '', \" DT\")))), !employeAuthed && React.createElement(LoginAdminComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["D:\\Sandra\\MERN\\projet restaurant\\front restau\\frontend\\src\\Components\\Commande\\VerifierCommandeComponent.js"],"names":["React","useEffect","useState","Button","Card","Col","Modal","Row","useParams","VerifierCommandeServices","ReactLoading","FiArrowDown","FiArrowUp","FiInfo","FiRefreshCw","LoginAdminComponent","VerifierCommandeComponent","parentCallback","societeCode","commandes","setCommandes","modal","showModal","CodeCmd","setCodeCmd","cmdProducts","setCmdProducts","loadingProducts","setLoadingProducts","sortByDate","setSortByDate","employeAuthed","setEmployeAuthed","verifierAdmin","getCommandesByCodeSociete","then","res","sort","a","b","DateCmd","employeString","localStorage","getItem","employe","JSON","parse","isAd","Fonction","getProductByCodeCommande","result","getData","getDate","date1","date","Date","parseInt","stringDate","getMonth","getFullYear","getHours","getMinutes","refreshData","sortcategs","validerCmd","cmd","find","admin","updateCommandeStatus","Status","CodeEmp","map","height","margin","paddingRight","paddingLeft","marginTop","textAlign","marginBottom","index","Depuis","TableNumber","PrixTotalCmd","marginRight","marginLeft","padding","width","e","overflowY","display","flexDirection","justifyContent","flexWrap","alignContent","prod","LibProd","parseFloat","Prix","TauxTVA","toFixed","Qte","DesProd"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Modal, Row } from 'react-bootstrap';\r\nimport { useParams } from 'react-router';\r\nimport VerifierCommandeServices from '../../Services/VerifierCommandeServices';\r\nimport ReactLoading from \"react-loading\";\r\nimport { FiArrowDown, FiArrowUp, FiInfo, FiRefreshCw } from \"react-icons/fi\";\r\n\r\nimport \"./../../Styles/CommandeComponentStyle.css\"\r\nimport \"./../../Styles/VerifierCommandeStyle.css\"\r\nimport LoginAdminComponent from '../Login/LoginAdminComponent';\r\n\r\nexport default function VerifierCommandeComponent({ parentCallback }) {\r\n    const { societeCode } = useParams()\r\n    const [commandes, setCommandes] = useState([])\r\n    const [modal, showModal] = useState(false)\r\n    const [CodeCmd, setCodeCmd] = useState()\r\n    const [cmdProducts, setCmdProducts] = useState([])\r\n    const [loadingProducts, setLoadingProducts] = useState(true)\r\n    const [sortByDate, setSortByDate] = useState(false)\r\n    const [employeAuthed, setEmployeAuthed] = useState(false);\r\n\r\n    useEffect(() => {\r\n        parentCallback(societeCode)\r\n        setEmployeAuthed(verifierAdmin())\r\n        VerifierCommandeServices.getCommandesByCodeSociete(societeCode).then(res => {\r\n            setCommandes(res.sort((a, b) => (a.DateCmd > b.DateCmd) ? 1 : (a.DateCmd < b.DateCmd) ? -1 : 0))\r\n        });\r\n\r\n\r\n\r\n    }, [parentCallback, societeCode])\r\n\r\n    function verifierAdmin() {\r\n        const employeString = localStorage.getItem(\"employe\")\r\n        if (employeString) {\r\n            const employe = JSON.parse(employeString);\r\n            const isAd = employe.Fonction === \"ADMINISTRATEUR\";\r\n            return isAd;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (CodeCmd) {\r\n            setCmdProducts([]);\r\n            setLoadingProducts(true)\r\n            VerifierCommandeServices.getProductByCodeCommande(CodeCmd).then(result => {\r\n                setCmdProducts(result);\r\n                setLoadingProducts(false)\r\n            })\r\n        }\r\n    }, [CodeCmd])\r\n\r\n    function getData() {\r\n        setCommandes([])\r\n        VerifierCommandeServices.getCommandesByCodeSociete(societeCode).then(res => {\r\n            if (sortByDate) {\r\n                setCommandes(res.sort((a, b) => (a.DateCmd > b.DateCmd) ? 1 : (a.DateCmd < b.DateCmd) ? -1 : 0))\r\n            } else {\r\n                setCommandes(res.sort((a, b) => (a.DateCmd < b.DateCmd) ? 1 : (a.DateCmd > b.DateCmd) ? -1 : 0))\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    function getDate(date1) {\r\n        let date = new Date(parseInt(date1));\r\n        let stringDate = \"\"\r\n        stringDate += date.getDate() < 10 ? `0${date.getDate()}/` : `${date.getDate()}/`\r\n        stringDate += date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}/` : `${date.getMonth() + 1}/`\r\n        stringDate += date.getFullYear()\r\n        stringDate += date.getHours() < 10 ? ` 0${date.getHours()}` : ` ${date.getHours()}`\r\n        stringDate += date.getMinutes() < 10 ? `:0${date.getMinutes()}` : `:${date.getMinutes()}`\r\n        stringDate += \":00\"\r\n        return stringDate\r\n    }\r\n\r\n    function refreshData() {\r\n        getData();\r\n    }\r\n\r\n    function sortcategs(sortByDate) {\r\n        if (sortByDate) {\r\n            setCommandes(commandes.sort((a, b) => (a.DateCmd > b.DateCmd) ? 1 : (a.DateCmd < b.DateCmd) ? -1 : 0))\r\n        } else {\r\n            setCommandes(commandes.sort((a, b) => (a.DateCmd < b.DateCmd) ? 1 : (a.DateCmd > b.DateCmd) ? -1 : 0))\r\n        }\r\n    }\r\n\r\n    async function validerCmd(CodeCmd) {\r\n        const cmd = commandes.find(cmd => { return CodeCmd === cmd.CodeCmd })\r\n        if (cmd) {\r\n            const employeString = localStorage.getItem(\"employe\")\r\n            const admin = JSON.parse(employeString);\r\n            await VerifierCommandeServices.updateCommandeStatus(CodeCmd, { ...cmd, Status: 1 }, admin.CodeEmp)\r\n            setCommandes(commandes.map(cmd => {\r\n                if (cmd.CodeCmd === CodeCmd) {\r\n\r\n                    return { ...cmd, Status: 1 }\r\n                }\r\n                return cmd\r\n            }))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {employeAuthed && <div style={{ height: \"100%\", margin: \"auto\", paddingRight: \"15px\", paddingLeft: \"15px\", }}>\r\n                <Row style={{ height: \"100%\", }}>\r\n                    <Col xs={12} >\r\n                        <Card style={{ height: \"100%\" }} >\r\n                            <Card.Title style={{ marginTop: \"5px\", textAlign: \"center\" }}>\r\n                                Commandes\r\n\r\n                            </Card.Title>\r\n\r\n                            <hr style={{ margin: \"0px\" }} />\r\n                            <Card.Body style={{ }}>\r\n                                <Row>\r\n                                    <Col xs={12}>\r\n                                        <div style={{ height: \"100%\" }}>\r\n                                            <Card.Title style={{ marginBottom: \"0px\", textAlign: \"right\" }}>\r\n\r\n\r\n\r\n                                                <Button variant=\"light\" className='m-1' onClick={() => { setSortByDate(!sortByDate); sortcategs(!sortByDate) }}>{sortByDate && <FiArrowUp />} {!sortByDate && <FiArrowDown />} Date</Button>\r\n                                                <Button variant=\"light\" className='m-1' onClick={() => { refreshData() }}><FiRefreshCw /></Button>\r\n\r\n                                            </Card.Title>\r\n                                        </div>\r\n\r\n\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <hr />\r\n                                    </Col>\r\n                                    {\r\n                                        commandes.map((cmd, index) => (\r\n                                            <Col xs={12} key={index}>\r\n\r\n                                                <Card bg=\"light\" text=\"dark\" className=\"mb-2 w-100\" >\r\n                                                    <Card.Body>\r\n\r\n                                                        <div className=\"media\">\r\n                                                            <Row>\r\n                                                                <Col xs={6} sm={6} md={3} style={{ textAlign: \"center\" }}>\r\n                                                                    <img className=\"media-object mr-auto ml-auto\" src=\"/Images/order.png\" alt=\"\" />\r\n                                                                </Col>\r\n                                                                <Col xs={6} md={5} lg={6} xl={7} sm={6}>\r\n                                                                    <div className=\"media-body\">\r\n                                                                        <h5 className=\"mb-4\">\r\n                                                                            Date : {getDate(cmd.DateCmd)}\r\n                                                                        </h5>\r\n                                                                        {cmd.Depuis !== \"CLIENT\" && <h5>\r\n                                                                            Table : {cmd.TableNumber}\r\n                                                                        </h5>}\r\n                                                                        <h5>\r\n                                                                            Prix Total : {cmd.PrixTotalCmd} DT\r\n                                                                        </h5>\r\n                                                                        <h5>\r\n                                                                            Depuis : {cmd.Depuis === \"CLIENT\" ? \"Client\" : `Serveur (${cmd.CodeEmp})`}\r\n                                                                        </h5>\r\n\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                                <Col xl={2} lg={3} md={4} sm={5} xs={9} style={{ textAlign: \"right\", marginRight: \"auto\", marginLeft: \"auto\" }}>\r\n                                                                    <div style={{ padding: \"5px\", width: \"100%\", textAlign: \"center\" }}>\r\n                                                                        <Button variant=\"info\" size=\"sm\" style={{ marginTop: \"5px\" }} className=\"mb-3 w-100\" onClick={(e) => { setCodeCmd(cmd.CodeCmd); showModal(true) }}><FiInfo /> Voir plus</Button>\r\n                                                                        {cmd.Status === 0 && <Button variant=\"success\" size=\"sm\" style={{ marginTop: \"5px\" }} className=\"mb-3 w-100\" onClick={() => { validerCmd(cmd.CodeCmd) }}>Valider Commande</Button>}\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </div>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                            </Col>\r\n                                        ))\r\n                                    }\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    <Modal size=\"lg\" show={modal} onHide={showModal}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Commande</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ height: \"calc(100vh - 200px)\", overflowY: \"scroll\" }}>\r\n                            {loadingProducts && <div style={{ width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", flexWrap: \"wrap\", alignContent: \"center\" }}>\r\n                                <ReactLoading type={\"spokes\"} color=\"#000\" />\r\n                            </div>}\r\n                            {!loadingProducts &&\r\n                                <>{\r\n                                    cmdProducts.map((prod, index) => (\r\n                                        <Card bg=\"light\" text=\"dark\" className=\"mb-2 w-100\" key={index} >\r\n                                            <Card.Body>\r\n\r\n                                                <div className=\"media\">\r\n                                                    <Row>\r\n                                                        <Col xs={12} sm={6} md={6} lg={4} xl={4} style={{ textAlign: \"center\" }}>\r\n                                                            {/* <div className=\"media-left\" style={{ marginRight: \"auto\", marginLeft: \"auto\" }}> */}\r\n                                                            <img className=\"media-object\" src=\"/Images/food1.png\" alt=\"\" />\r\n                                                            {/* </div> */}\r\n                                                        </Col>\r\n                                                        <Col xs={12} md={6} lg={8} xl={8} sm={6}>\r\n                                                            <div className=\"media-body\">\r\n                                                                <h4>{prod.LibProd}</h4>\r\n                                                                <h5>Prix : <strong>{parseFloat(prod.Prix * (1 + (prod.TauxTVA * 0.01))).toFixed(1)} DT</strong></h5>\r\n                                                                <h5>Quantite : <strong>{prod.Qte}</strong></h5>\r\n                                                                <h5>Total : <strong> {(parseFloat((prod.Prix * (1 + (prod.TauxTVA * 0.01))) * prod.Qte).toFixed(1))} DT</strong></h5>\r\n                                                                <h6>Description : {prod.DesProd}</h6>\r\n                                                            </div>\r\n                                                        </Col>\r\n\r\n                                                    </Row>\r\n                                                </div>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    ))}</>\r\n                            }\r\n                        </Modal.Body>\r\n                        <Modal.Footer style={{ justifyContent: \"space-between\", flexWrap: \"nowrap\" }}>\r\n                            {CodeCmd && commandes && <h4 >Total : {(commandes.find(cmd => { return CodeCmd === cmd.CodeCmd })) ? (commandes.find(cmd => { return CodeCmd === cmd.CodeCmd })).PrixTotalCmd : ''} DT</h4>}\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                }\r\n            </div>}\r\n            {\r\n                !employeAuthed && <LoginAdminComponent />\r\n            }\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}