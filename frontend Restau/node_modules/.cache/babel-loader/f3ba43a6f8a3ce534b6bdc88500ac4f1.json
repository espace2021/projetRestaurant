{"ast":null,"code":"import _objectSpread from \"D:\\\\Sandra\\\\MERN\\\\projet restaurant\\\\frontend Restau\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\Sandra\\\\MERN\\\\projet restaurant\\\\frontend Restau\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Sandra\\\\MERN\\\\projet restaurant\\\\frontend Restau\\\\src\\\\Components\\\\Commande\\\\CommandeComponent.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Form, Modal, Row } from 'react-bootstrap';\nimport { FiPlusCircle } from 'react-icons/fi';\nimport NumericInput from 'react-numeric-input';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport ArticleServices from '../../Services/ArticleServices';\nimport CategoriesServices from '../../Services/CategoriesServices';\nimport CommandeServices from '../../Services/CommandeServices';\nimport LoginEmployerComponent from '../Login/LoginEmployerComponent';\nimport \"./../../Styles/CommandeComponentStyle.css\";\nexport default function CommandeComponent({\n  parentCallback\n}) {\n  const _useLocation = useLocation(),\n        search = _useLocation.search;\n\n  const _useParams = useParams(),\n        societeCode = _useParams.societeCode,\n        codeCateg = _useParams.codeCateg;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        categories = _useState2[0],\n        setCategories = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        articlesPerCateg = _useState4[0],\n        setArticlesPerCateg = _useState4[1];\n\n  const history = useHistory();\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        numericInputValues = _useState6[0],\n        setNumericInputValues = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        commande = _useState8[0],\n        setCommande = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        modal = _useState10[0],\n        showModal = _useState10[1];\n\n  const _useState11 = useState(new URLSearchParams(search).get('table')),\n        _useState12 = _slicedToArray(_useState11, 2),\n        tableNumber = _useState12[0],\n        setTableNumber = _useState12[1];\n\n  const _useState13 = useState(new URLSearchParams(search).get('employe')),\n        _useState14 = _slicedToArray(_useState13, 1),\n        isEmploye = _useState14[0];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        ClientName = _useState16[0],\n        setClientName = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        employeAuthed = _useState18[0],\n        setEmployeAuthed = _useState18[1];\n\n  const _useState19 = useState(new URLSearchParams(search).get('client')),\n        _useState20 = _slicedToArray(_useState19, 1),\n        isClient = _useState20[0];\n\n  useEffect(() => {\n    parentCallback(societeCode);\n    setEmployeAuthed(verifyIsEmploye());\n    CategoriesServices.getCategoriesByCodeSoc(societeCode).then(categs => {\n      setCategories(categs);\n    });\n\n    if (codeCateg) {\n      ArticleServices.getArticlesByCodeSocieteAndCodeCateg(societeCode, codeCateg).then(articles => {\n        const length = articles.length;\n        setNumericInputValues(new Array(length).fill(\"\"));\n        setArticlesPerCateg(articles);\n      });\n    }\n  }, [parentCallback, societeCode, codeCateg]);\n\n  function verifyIsEmploye() {\n    const employeString = localStorage.getItem(\"employe\");\n\n    if (employeString) {\n      const employe = JSON.parse(employeString);\n      const isServeur = employe.Fonction === \"SERVEUR\";\n      return isServeur;\n    }\n\n    return false;\n  }\n\n  function ajouterProduitCmd(e, article, index) {\n    let val = 0;\n    const button = e.target;\n    const exist = commande.find(cmd => {\n      return cmd.product.CodeArt === article.CodeArt;\n    });\n    setNumericInputValues(numericInputValues.map((value, i) => {\n      if (i === index) {\n        val = parseInt(value);\n        return \"\";\n      }\n\n      return value;\n    }));\n    if (!val || isNaN(val) || val === \"0\" || val === \"\") return;\n\n    if (exist) {\n      val += exist.quantite;\n      setCommande(commande.map(cmd => {\n        if (cmd.product.CodeArt === exist.product.CodeArt) {\n          return _objectSpread({}, cmd, {\n            quantite: val\n          });\n        }\n\n        return cmd;\n      }));\n    } else {\n      const cmd = {\n        product: article,\n        quantite: val,\n        total: article.prix1 * (1 + article.tauxtva * 0.01) * val\n      };\n      setCommande([...commande, cmd]);\n    }\n\n    button.className = button.className.replace(\"primary\", \"success\");\n    button.innerHTML = \"Ajouté !\";\n    setTimeout(() => {\n      button.className = button.className.replace(\"success\", \"primary\");\n      button.innerHTML = \"Ajouter\";\n    }, 1000);\n  }\n\n  function changeInputValue(e, index) {\n    setNumericInputValues(numericInputValues.map((value, i) => {\n      if (i === index) {\n        return \"\".concat(e);\n      }\n\n      return value;\n    }));\n  }\n\n  function changeCommandeQuatite(value, index) {\n    if (!value || isNaN(value) || value === \"\" || parseInt(value) === 0) return;\n    setCommande(commande.map((cmd, i) => {\n      if (i === index) {\n        return _objectSpread({}, cmd, {\n          quantite: parseInt(value),\n          total: cmd.product.prix1 * (1 + cmd.product.tauxtva * 0.01) * parseInt(value)\n        });\n      }\n\n      return cmd;\n    }));\n  }\n\n  function supprimerProduit(index) {\n    setCommande(commande.filter((cmd, i) => {\n      return i !== index;\n    }));\n  }\n\n  function changeCateg(e) {\n    let index = e.target.value;\n\n    if (index >= 0) {\n      setArticlesPerCateg([]);\n      if (isEmploye) history.push(\"/Commande/\".concat(societeCode, \"/\").concat(categories[index].CodeCat, \"?employe=\").concat(isEmploye, \"&table=\").concat(tableNumber));else if (isClient) history.push(\"/Commande/\".concat(societeCode, \"/\").concat(categories[index].CodeCat, \"?client=\").concat(isClient));\n    } else {\n      history.push(\"/Commande/\".concat(societeCode, \"?employe=\").concat(isEmploye, \"&table=\").concat(tableNumber));\n    }\n  }\n\n  async function confirmCmd() {\n    if (!tableNumber && isEmploye) {\n      alert(\"Veuillez choisir un numéro de table\");\n      return;\n    }\n\n    if (commande.length <= 0) {\n      alert(\"Veuillez ajouter des produits à la commande\");\n      return;\n    }\n\n    if (ClientName === \"\" && isClient) {\n      alert(\"Veuillez saisir un nom\");\n      return;\n    }\n\n    const depuis = isClient ? \"CLIENT\" : isEmploye ? \"EMPLOYE\" : \"\";\n    const CodeEmp = isEmploye ? JSON.parse(localStorage.getItem(\"employe\")).CodeEmp : \"\";\n    await CommandeServices.insertCommande(commande, tableNumber, societeCode, ClientName, depuis, CodeEmp);\n    cleanup();\n  }\n\n  function cleanup() {\n    showModal(false);\n    setCommande([]);\n    setNumericInputValues(new Array(articlesPerCateg.length).fill(\"\"));\n  }\n\n  return React.createElement(React.Fragment, null, (isEmploye && employeAuthed || isClient) && React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      margin: \"auto\",\n      paddingRight: \"15px\",\n      paddingLeft: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    lg: 6,\n    xl: 6,\n    style: {\n      height: \"100%\",\n      marginBottom: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      height: \"100%\",\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    style: {\n      marginTop: \"12px\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    style: {\n      alignItems: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: \"md\",\n    className: \"mr-auto\",\n    xl: 3,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, isEmploye ? 'Table' : isClient ? 'Nom' : ''), React.createElement(Col, {\n    sm: 4,\n    xs: 6,\n    style: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, isEmploye && React.createElement(NumericInput, {\n    value: tableNumber,\n    onChange: e => {\n      history.push(\"\".concat(history.location.pathname, \"?employe=\").concat(isEmploye, \"&table=\").concat(e));\n      setTableNumber(e);\n    },\n    precision: 0,\n    step: 1,\n    min: 1,\n    size: 2,\n    mobile: true,\n    style: {\n      input: {\n        width: \"100%\",\n        marginTop: \"3px\",\n        marginBottom: \"3px\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), isClient && React.createElement(Form.Control, {\n    type: \"text\",\n    value: ClientName,\n    onChange: e => {\n      setClientName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }))))))), React.createElement(Col, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    lg: 6,\n    xl: 6,\n    style: {\n      height: \"100%\",\n      marginBottom: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      height: \"100%\",\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    style: {\n      marginTop: \"12px\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    style: {\n      alignItems: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: \"md\",\n    xl: 3,\n    lg: 4,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Categories\"), React.createElement(Col, {\n    sm: 5,\n    xs: 12,\n    style: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: e => {\n      changeCateg(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Selectionner une categorie ...\"), categories.map((categ, index) => React.createElement(\"option\", {\n    key: index,\n    selected: categ.CodeCat === codeCateg,\n    value: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, categ.DesCat))))))))), codeCateg && React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    style: {\n      marginTop: \"5px\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Produits\"), React.createElement(\"hr\", {\n    style: {\n      margin: \"0px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(Card.Body, {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, articlesPerCateg.map((article, index) => React.createElement(Col, {\n    xs: 12,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Card, {\n    bg: \"light\",\n    text: \"dark\",\n    className: \"mb-2 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 6,\n    sm: 6,\n    md: 3,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"media-object mr-auto ml-auto\",\n    src: \"/Images/food1.png\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 6,\n    md: 5,\n    lg: 6,\n    xl: 7,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, article.LibArt), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, parseFloat(article.prix1 * (1 + article.tauxtva * 0.01)).toFixed(1), \" DT  \", article.unite === \"PIECE\" ? \"/ PIECE\" : \"\"), React.createElement(\"h5\", {\n    style: {\n      color: \"\".concat(article.dispo === 0 ? \"green\" : \"red\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, article.dispo === 0 ? \"\" : \"Non\", \" Disponible \"), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Description : \", article.Descrip, \" \"))), React.createElement(Col, {\n    xl: 2,\n    lg: 3,\n    md: 4,\n    sm: 5,\n    xs: 9,\n    style: {\n      textAlign: \"right\",\n      marginRight: \"auto\",\n      marginLeft: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      padding: \"5px\",\n      width: \"150px\",\n      marginRight: \"auto\",\n      marginLeft: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(NumericInput, {\n    precision: 0,\n    className: \"form-control\",\n    min: 1,\n    value: numericInputValues[index],\n    mobile: true,\n    style: {\n      input: {\n        width: \"100%\"\n      }\n    },\n    onChange: e => {\n      changeInputValue(e, index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"md\",\n    style: {\n      marginTop: \"5px\",\n      width: \"100%\"\n    },\n    className: \"\",\n    onClick: e => {\n      ajouterProduitCmd(e, article, index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(FiPlusCircle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }), \" Ajouter\")))))))))))))), React.createElement(Modal, {\n    size: \"lg\",\n    show: modal,\n    onHide: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"Commande\")), React.createElement(Modal.Body, {\n    style: {\n      height: \"calc(100vh - 200px)\",\n      overflowY: \"scroll\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, tableNumber && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"Table : \", tableNumber), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  })), commande.length > 0 && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => {\n      setCommande([]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"Supprimer tous\")), \"  \", React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  })), commande.map((cmd, index) => React.createElement(Card, {\n    key: index,\n    bg: \"light\",\n    text: \"dark\",\n    className: \"mb-2 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 6,\n    sm: 6,\n    md: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"media-object\",\n    src: \"/Images/food1.png\",\n    alt: \"HP Chromebook 11\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    xs: 6,\n    md: 5,\n    lg: 5,\n    xl: 6,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, cmd.product.LibArt), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, parseFloat(cmd.product.prix1 * (1 + cmd.product.tauxtva * 0.01)).toFixed(1), \" DT  \", cmd.product.unite === \"PIECE\" ? \"/ PIECE\" : \"\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, \"Total : \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, parseFloat(cmd.total).toFixed(1), \" DT\")), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, \"Description : \", cmd.product.Descrip))), React.createElement(Col, {\n    xs: 8,\n    md: 4,\n    lg: 4,\n    xl: 3,\n    sm: 8,\n    style: {\n      marginRight: \"auto\",\n      marginLeft: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      padding: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(NumericInput, {\n    precision: 0,\n    className: \"form-control\",\n    min: 1,\n    value: cmd.quantite,\n    mobile: true,\n    style: {\n      input: {\n        width: \"100%\"\n      }\n    },\n    onChange: e => {\n      changeCommandeQuatite(e, index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"sm\",\n    style: {},\n    className: \"w-100 mt-2\",\n    variant: \"danger\",\n    onClick: e => {\n      supprimerProduit(index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"Supprimer\"))))))))), React.createElement(Modal.Footer, {\n    style: {\n      justifyContent: \"space-between\",\n      flexWrap: \"nowrap\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"Total : \", parseFloat(commande.reduce((a, cmd) => a = a + cmd.total, 0)).toFixed(1), \" DT\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => {\n      confirmCmd();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, \" Confirmer Commande \"))), codeCateg && React.createElement(Button, {\n    variant: \"success\",\n    style: {\n      position: \"fixed\",\n      bottom: \"100px\",\n      right: \"30px\",\n      zIndex: \"1000\"\n    },\n    onClick: () => {\n      showModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, \"Confirmer Commande\"), React.createElement(Button, {\n    variant: \"dark\",\n    style: {\n      position: \"fixed\",\n      bottom: \"100px\",\n      left: \"30px\",\n      zIndex: \"1000\"\n    },\n    onClick: () => {\n      window.scrollTo(0, 0);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, \"TOP\")), isEmploye && !employeAuthed && React.createElement(React.Fragment, null, React.createElement(LoginEmployerComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["D:\\Sandra\\MERN\\projet restaurant\\frontend Restau\\src\\Components\\Commande\\CommandeComponent.js"],"names":["React","useEffect","useState","Button","Card","Col","Form","Modal","Row","FiPlusCircle","NumericInput","useHistory","useLocation","useParams","ArticleServices","CategoriesServices","CommandeServices","LoginEmployerComponent","CommandeComponent","parentCallback","search","societeCode","codeCateg","categories","setCategories","articlesPerCateg","setArticlesPerCateg","history","numericInputValues","setNumericInputValues","commande","setCommande","modal","showModal","URLSearchParams","get","tableNumber","setTableNumber","isEmploye","ClientName","setClientName","employeAuthed","setEmployeAuthed","isClient","verifyIsEmploye","getCategoriesByCodeSoc","then","categs","getArticlesByCodeSocieteAndCodeCateg","articles","length","Array","fill","employeString","localStorage","getItem","employe","JSON","parse","isServeur","Fonction","ajouterProduitCmd","e","article","index","val","button","target","exist","find","cmd","product","CodeArt","map","value","i","parseInt","isNaN","quantite","total","prix1","tauxtva","className","replace","innerHTML","setTimeout","changeInputValue","changeCommandeQuatite","supprimerProduit","filter","changeCateg","push","CodeCat","confirmCmd","alert","depuis","CodeEmp","insertCommande","cleanup","height","margin","paddingRight","paddingLeft","marginBottom","marginTop","textAlign","width","alignItems","marginLeft","marginRight","location","pathname","input","categ","DesCat","LibArt","parseFloat","toFixed","unite","color","dispo","Descrip","padding","overflowY","display","flexDirection","justifyContent","flexWrap","reduce","a","position","bottom","right","zIndex","left","window","scrollTo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Form, Modal, Row } from 'react-bootstrap'\r\nimport { FiPlusCircle } from 'react-icons/fi'\r\nimport NumericInput from 'react-numeric-input'\r\nimport { useHistory, useLocation, useParams } from 'react-router'\r\nimport ArticleServices from '../../Services/ArticleServices'\r\nimport CategoriesServices from '../../Services/CategoriesServices'\r\nimport CommandeServices from '../../Services/CommandeServices'\r\nimport LoginEmployerComponent from '../Login/LoginEmployerComponent'\r\nimport \"./../../Styles/CommandeComponentStyle.css\"\r\n\r\nexport default function CommandeComponent({ parentCallback }) {\r\n    const { search } = useLocation();\r\n    const { societeCode, codeCateg } = useParams()\r\n    const [categories, setCategories] = useState([])\r\n    const [articlesPerCateg, setArticlesPerCateg] = useState([])\r\n    const history = useHistory();\r\n    const [numericInputValues, setNumericInputValues] = useState([])\r\n    const [commande, setCommande] = useState([])\r\n    const [modal, showModal] = useState(false);\r\n    const [tableNumber, setTableNumber] = useState(new URLSearchParams(search).get('table'))\r\n    const [isEmploye] = useState(new URLSearchParams(search).get('employe'))\r\n    const [ClientName, setClientName] = useState(\"\")\r\n    const [employeAuthed, setEmployeAuthed] = useState(false);\r\n    const [isClient] = useState(new URLSearchParams(search).get('client'))\r\n\r\n    useEffect(() => {\r\n        parentCallback(societeCode)\r\n        setEmployeAuthed(verifyIsEmploye());\r\n        CategoriesServices.getCategoriesByCodeSoc(societeCode).then(categs => {\r\n            setCategories(categs)\r\n        })\r\n        if (codeCateg) {\r\n            ArticleServices.getArticlesByCodeSocieteAndCodeCateg(societeCode, codeCateg).then(articles => {\r\n                const length = articles.length\r\n                setNumericInputValues(new Array(length).fill(\"\"))\r\n                setArticlesPerCateg(articles)\r\n            })\r\n        }\r\n\r\n\r\n    }, [parentCallback, societeCode, codeCateg])\r\n\r\n    function verifyIsEmploye() {\r\n        const employeString = localStorage.getItem(\"employe\")\r\n        if (employeString) {\r\n            const employe = JSON.parse(employeString);\r\n            const isServeur = employe.Fonction === \"SERVEUR\";\r\n            return isServeur;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function ajouterProduitCmd(e, article, index) {\r\n        let val = 0;\r\n        const button = e.target;\r\n        const exist = commande.find(cmd => {\r\n            return cmd.product.CodeArt === article.CodeArt\r\n        })\r\n\r\n        setNumericInputValues(numericInputValues.map((value, i) => {\r\n            if (i === index) {\r\n                val = parseInt(value);\r\n                return \"\"\r\n            }\r\n            return value\r\n        }))\r\n\r\n        if (!val || isNaN(val) || val === \"0\" || val === \"\") return\r\n        if (exist) {\r\n            val += exist.quantite;\r\n            setCommande(commande.map(cmd => {\r\n                if (cmd.product.CodeArt === exist.product.CodeArt) {\r\n                    return { ...cmd, quantite: val }\r\n                }\r\n                return cmd\r\n            }))\r\n        } else {\r\n            const cmd = {\r\n                product: article,\r\n                quantite: val,\r\n                total: (article.prix1 * (1 + (article.tauxtva * 0.01))) * val\r\n            }\r\n            setCommande([...commande, cmd])\r\n        }\r\n\r\n        button.className = button.className.replace(\"primary\", \"success\")\r\n        button.innerHTML = \"Ajouté !\"\r\n        setTimeout(() => {\r\n\r\n            button.className = button.className.replace(\"success\", \"primary\")\r\n            button.innerHTML = \"Ajouter\"\r\n        }, 1000);\r\n    }\r\n    function changeInputValue(e, index) {\r\n        setNumericInputValues(numericInputValues.map((value, i) => {\r\n            if (i === index) {\r\n                return `${e}`\r\n            }\r\n            return value\r\n        }))\r\n    }\r\n    function changeCommandeQuatite(value, index) {\r\n        if (!value || isNaN(value) || value === \"\" || parseInt(value) === 0) return\r\n        setCommande(commande.map((cmd, i) => {\r\n            if (i === index) {\r\n                return { ...cmd, quantite: parseInt(value), total: (cmd.product.prix1 * (1 + (cmd.product.tauxtva * 0.01))) * parseInt(value) }\r\n            }\r\n\r\n            return cmd\r\n        }))\r\n    }\r\n\r\n    function supprimerProduit(index) {\r\n        setCommande(commande.filter((cmd, i) => {\r\n            return i !== index\r\n        }))\r\n    }\r\n    function changeCateg(e) {\r\n        let index = e.target.value;\r\n        if (index >= 0) {\r\n            setArticlesPerCateg([])\r\n            if (isEmploye)\r\n                history.push(`/Commande/${societeCode}/${categories[index].CodeCat}?employe=${isEmploye}&table=${tableNumber}`)\r\n            else if (isClient)\r\n                history.push(`/Commande/${societeCode}/${categories[index].CodeCat}?client=${isClient}`)\r\n        } else {\r\n            history.push(`/Commande/${societeCode}?employe=${isEmploye}&table=${tableNumber}`)\r\n        }\r\n    }\r\n    async function confirmCmd() {\r\n        if (!tableNumber && isEmploye) {\r\n            alert(\"Veuillez choisir un numéro de table\")\r\n            return\r\n        }\r\n        if (commande.length <= 0) {\r\n            alert(\"Veuillez ajouter des produits à la commande\")\r\n            return\r\n        }\r\n        if (ClientName === \"\" && isClient) {\r\n            alert(\"Veuillez saisir un nom\")\r\n            return\r\n        }\r\n        const depuis = isClient ? \"CLIENT\" : isEmploye ? \"EMPLOYE\" : \"\"\r\n        const CodeEmp = isEmploye ? (JSON.parse(localStorage.getItem(\"employe\"))).CodeEmp : \"\"\r\n        await CommandeServices.insertCommande(commande, tableNumber, societeCode, ClientName, depuis,CodeEmp);\r\n        cleanup();\r\n    }\r\n\r\n    function cleanup() {\r\n        showModal(false)\r\n        setCommande([]);\r\n        setNumericInputValues(new Array(articlesPerCateg.length).fill(\"\"))\r\n    }\r\n    return (\r\n        <>\r\n\r\n            {((isEmploye && employeAuthed) || isClient) && <div style={{ height: \"100%\", margin: \"auto\", paddingRight: \"15px\", paddingLeft: \"15px\", }}>\r\n                <Row style={{ height: \"100%\", }}>\r\n                    <Col xs={12} sm={12} md={6} lg={6} xl={6} style={{ height: \"100%\", marginBottom: \"15px\" }} >\r\n                        <Card style={{ height: \"100%\", paddingLeft: \"15px\", paddingRight: \"15px\", }} >\r\n                            <Card.Title style={{ marginTop: \"12px\", textAlign: \"center\" }}>\r\n                                <div style={{ height: \"100%\", width: \"100%\" }}>\r\n\r\n                                    <Form.Row style={{ alignItems: \"flex-end\" }}>\r\n\r\n                                        <Form.Label column=\"md\" className=\"mr-auto\" xl={3} lg={4} sm={6} xs={12}>\r\n                                            {isEmploye ? 'Table' : isClient ? 'Nom' : ''}\r\n                                        </Form.Label>\r\n\r\n                                        <Col sm={4} xs={6} style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                                            {isEmploye && <NumericInput value={tableNumber} onChange={(e) => { history.push(`${history.location.pathname}?employe=${isEmploye}&table=${e}`); setTableNumber(e) }} precision={0} step={1} min={1} size={2} mobile style={{ input: { width: \"100%\", marginTop: \"3px\", marginBottom: \"3px\" } }} />}\r\n                                            {isClient && <Form.Control type=\"text\" value={ClientName} onChange={(e) => { setClientName(e.target.value) }}></Form.Control>}\r\n                                        </Col>\r\n                                    </Form.Row>\r\n                                </div>\r\n                            </Card.Title>\r\n\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xs={12} sm={12} md={6} lg={6} xl={6} style={{ height: \"100%\", marginBottom: \"15px\" }} >\r\n                        <Card style={{ height: \"100%\", paddingLeft: \"15px\", paddingRight: \"15px\" }} >\r\n                            <Card.Title style={{ marginTop: \"12px\", textAlign: \"center\" }}>\r\n                                <div style={{ height: \"100%\", width: \"100%\" }}>\r\n\r\n                                    <Form.Row style={{ alignItems: \"flex-end\" }}>\r\n                                        <Form.Label column=\"md\" xl={3} lg={4} xs={12} sm={6}>\r\n                                            Categories\r\n                                        </Form.Label>\r\n                                        <Col sm={5} xs={12} style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                                            <Form.Control as=\"select\" onChange={(e) => { changeCateg(e) }}>\r\n                                                <option value=\"-1\">Selectionner une categorie ...</option>\r\n                                                {categories.map((categ, index) => (\r\n                                                    <option key={index} selected={categ.CodeCat === codeCateg} value={index}>{categ.DesCat}</option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Form.Row>\r\n                                </div>\r\n                            </Card.Title>\r\n\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    {codeCateg && <Col xs={12} >\r\n                        <Card style={{ height: \"100%\" }} >\r\n                            <Card.Title style={{ marginTop: \"5px\", textAlign: \"center\" }}>\r\n                                Produits\r\n                            </Card.Title>\r\n                            <hr style={{ margin: \"0px\" }} />\r\n                            <Card.Body style={{ }}>\r\n                                <Row>\r\n                                    {\r\n                                        articlesPerCateg.map((article, index) => (\r\n                                            <Col xs={12} key={index}>\r\n                                                <Card bg=\"light\" text=\"dark\" className=\"mb-2 w-100\" >\r\n                                                    <Card.Body>\r\n\r\n                                                        <div className=\"media\">\r\n                                                            <Row>\r\n                                                                <Col xs={6} sm={6} md={3} style={{ textAlign: \"center\" }}>\r\n                                                                    <img className=\"media-object mr-auto ml-auto\" src=\"/Images/food1.png\" alt=\"\" />\r\n                                                                </Col>\r\n                                                                <Col xs={6} md={5} lg={6} xl={7} sm={6}>\r\n                                                                    <div className=\"media-body\">\r\n                                                                        <h4 className=\"\">{article.LibArt}</h4>\r\n\r\n                                                                        <h5>{parseFloat(article.prix1 * (1 + (article.tauxtva * 0.01))).toFixed(1)} DT  {article.unite === \"PIECE\" ? \"/ PIECE\" : \"\"}</h5>\r\n                                                                        <h5 style={{ color: `${article.dispo === 0 ? \"green\" : \"red\"}` }}>{article.dispo === 0 ? \"\" : \"Non\"} Disponible </h5>\r\n                                                                        <h6>Description : {article.Descrip} </h6>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                                <Col xl={2} lg={3} md={4} sm={5} xs={9} style={{ textAlign: \"right\", marginRight: \"auto\", marginLeft: \"auto\" }}>\r\n                                                                    <div style={{ padding: \"5px\", width: \"150px\", marginRight: \"auto\", marginLeft: 'auto' }}>\r\n                                                                        <NumericInput precision={0} className='form-control' min={1} value={numericInputValues[index]} mobile style={{ input: { width: \"100%\" } }} onChange={(e) => { changeInputValue(e, index); }} />\r\n                                                                        {/* <input value={numericInputValues[index]} onChange={(e) => { changeInputValue(e, index) }} min={0} type='number' className=\"input-group-btn\" style={{ textAlign: \"center\" }} /> */}\r\n                                                                        <Button size=\"md\" style={{ marginTop: \"5px\", width: \"100%\" }} className=\"\" onClick={(e) => { ajouterProduitCmd(e, article, index) }}  ><FiPlusCircle /> Ajouter</Button>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </div>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                            </Col>\r\n                                        ))\r\n                                    }\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>}\r\n                </Row>\r\n                {\r\n                    <Modal size=\"lg\" show={modal} onHide={showModal}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Commande</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ height: \"calc(100vh - 200px)\", overflowY: \"scroll\" }}>\r\n                            {tableNumber && <div><h5>Table : {tableNumber}</h5>\r\n                                <hr /></div>}\r\n                            {commande.length > 0 && <><div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n                                <Button variant=\"danger\" onClick={() => { setCommande([]); }}>Supprimer tous</Button>\r\n\r\n                            </div>  <hr /></>}\r\n                            {\r\n                                commande.map((cmd, index) => (\r\n                                    <Card key={index} bg=\"light\" text=\"dark\" className=\"mb-2 w-100\" >\r\n                                        <Card.Body>\r\n\r\n                                            <div className=\"media\">\r\n                                                <Row>\r\n                                                    <Col xs={6} sm={6} md={3} style={{ textAlign: \"right\" }}>\r\n                                                        <div className=\"media-left\">\r\n                                                            <img className=\"media-object\" src=\"/Images/food1.png\" alt=\"HP Chromebook 11\" />\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                    <Col xs={6} md={5} lg={5} xl={6} sm={6}>\r\n                                                        <div className=\"media-body\">\r\n                                                            <h4 className=\"\">{cmd.product.LibArt}</h4>\r\n                                                            <h5>{parseFloat(cmd.product.prix1 * (1 + (cmd.product.tauxtva * 0.01))).toFixed(1)} DT  {cmd.product.unite === \"PIECE\" ? \"/ PIECE\" : \"\"}</h5>\r\n                                                            <h5>Total : <strong>{parseFloat(cmd.total).toFixed(1)} DT</strong></h5>\r\n                                                            <h6>Description : {cmd.product.Descrip}</h6>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                    <Col xs={8} md={4} lg={4} xl={3} sm={8} style={{ marginRight: \"auto\", marginLeft: \"auto\" }}>\r\n                                                        <div style={{ padding: \"5px\" }}>\r\n                                                            <NumericInput precision={0} className='form-control' min={1} value={cmd.quantite} mobile style={{ input: { width: \"100%\" } }} onChange={(e) => { changeCommandeQuatite(e, index) }} />\r\n                                                            {/* <input value={cmd.quantite} onChange={(e) => { changeCommandeQuatite(e, index) }} min={1} type='number' className=\"input-group-btn\" style={{ textAlign: \"center\" }} /> */}\r\n                                                            <Button size=\"sm\" style={{ }} className=\"w-100 mt-2\" variant=\"danger\" onClick={(e) => { supprimerProduit(index) }} >Supprimer</Button>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                ))\r\n                            }\r\n                        </Modal.Body>\r\n                        <Modal.Footer style={{ justifyContent: \"space-between\", flexWrap: \"nowrap\" }}>\r\n                            <h4 >Total : {parseFloat(commande.reduce((a, cmd) => a = a + cmd.total, 0)).toFixed(1)} DT</h4>\r\n                            <Button variant=\"primary\" onClick={() => { confirmCmd() }}> Confirmer Commande </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                }\r\n                {codeCateg && <Button variant={\"success\"} style={{ position: \"fixed\", bottom: \"100px\", right: \"30px\", zIndex: \"1000\" }} onClick={() => { showModal(true) }} >Confirmer Commande</Button>}\r\n                <Button variant={\"dark\"} style={{ position: \"fixed\", bottom: \"100px\", left: \"30px\", zIndex: \"1000\" }} onClick={() => { window.scrollTo(0, 0) }}>TOP</Button>\r\n            </div >}\r\n            {(isEmploye && !employeAuthed) && <>\r\n                <LoginEmployerComponent />\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}